{"ast":null,"code":"const ADD_POST = 'ADD_POST';\nconst ADD_LIKE = 'ADD_LIKE';\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\n\nconst postReducer = (action, state) => {\n  switch (action.type) {\n    case ADD_POST:\n      let post = {\n        id: state.posts.length,\n        text: state.newPostText,\n        likes: 0\n      };\n      state.posts.push(post);\n      break;\n\n    case ADD_LIKE:\n      state.posts[action.id].likes++;\n      break;\n\n    case CHANGE_NEW_POST_TEXT:\n      state.newPostText = action.text;\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default postReducer;\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const addLikeActionCreator = id => {\n  return {\n    type: ADD_LIKE,\n    id: id\n  };\n};\nexport const newPostTextActionCreator = text => {\n  return {\n    type: CHANGE_NEW_POST_TEXT,\n    text: text\n  };\n};","map":{"version":3,"sources":["D:/Projects/robodu/src/redux/postReducer.js"],"names":["ADD_POST","ADD_LIKE","CHANGE_NEW_POST_TEXT","postReducer","action","state","type","post","id","posts","length","text","newPostText","likes","push","addPostActionCreator","addLikeActionCreator","newPostTextActionCreator"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,UAAOD,MAAM,CAACE,IAAd;AACI,SAAKN,QAAL;AACI,UAAIO,IAAI,GAAG;AACPC,QAAAA,EAAE,EAAEH,KAAK,CAACI,KAAN,CAAYC,MADT;AAEPC,QAAAA,IAAI,EAAEN,KAAK,CAACO,WAFL;AAGPC,QAAAA,KAAK,EAAE;AAHA,OAAX;AAKAR,MAAAA,KAAK,CAACI,KAAN,CAAYK,IAAZ,CAAiBP,IAAjB;AACA;;AAEJ,SAAKN,QAAL;AACII,MAAAA,KAAK,CAACI,KAAN,CAAYL,MAAM,CAACI,EAAnB,EAAuBK,KAAvB;AACA;;AAEJ,SAAKX,oBAAL;AACIG,MAAAA,KAAK,CAACO,WAAN,GAAoBR,MAAM,CAACO,IAA3B;AACA;;AAEJ;AACI;AAnBR;;AAqBA,SAAON,KAAP;AACH,CAvBD;;AAyBA,eAAeF,WAAf;AAGA,OAAO,MAAMY,oBAAoB,GAAG,MAAM;AACtC,SAAO;AAAET,IAAAA,IAAI,EAAEN;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMgB,oBAAoB,GAAIR,EAAD,IAAQ;AACxC,SAAO;AAAEF,IAAAA,IAAI,EAAEL,QAAR;AAAkBO,IAAAA,EAAE,EAAEA;AAAtB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMS,wBAAwB,GAAIN,IAAD,IAAU;AAC9C,SAAO;AAAEL,IAAAA,IAAI,EAAEJ,oBAAR;AAA8BS,IAAAA,IAAI,EAAEA;AAApC,GAAP;AACH,CAFM","sourcesContent":["const ADD_POST = 'ADD_POST';\r\nconst ADD_LIKE = 'ADD_LIKE';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\n\r\nconst postReducer = (action, state) => {\r\n    switch(action.type) {\r\n        case ADD_POST: \r\n            let post = {\r\n                id: state.posts.length,\r\n                text: state.newPostText,\r\n                likes: 0\r\n            }\r\n            state.posts.push(post);\r\n            break;\r\n        \r\n        case ADD_LIKE: \r\n            state.posts[action.id].likes++;\r\n            break\r\n\r\n        case CHANGE_NEW_POST_TEXT: \r\n            state.newPostText = action.text;\r\n            break;\r\n\r\n        default: \r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default postReducer;\r\n\r\n\r\nexport const addPostActionCreator = () => {\r\n    return { type: ADD_POST}\r\n}\r\n\r\nexport const addLikeActionCreator = (id) => {\r\n    return { type: ADD_LIKE, id: id}\r\n}\r\n\r\nexport const newPostTextActionCreator = (text) => {\r\n    return { type: CHANGE_NEW_POST_TEXT, text: text}\r\n}"]},"metadata":{},"sourceType":"module"}
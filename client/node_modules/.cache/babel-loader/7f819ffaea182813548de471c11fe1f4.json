{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { addPostActionCreator, newPostTextActionCreator, addLikeActionCreator } from \"../../../redux/postReducer\";\nimport Posts from './Posts';\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.postState.posts,\n    newPostText: state.postState.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    textChanged: text => {\n      dispatch(newPostTextActionCreator(text));\n    },\n    addLike: id => {\n      dispatch(addLikeActionCreator(id));\n    }\n  };\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;","map":{"version":3,"sources":["D:/Projects/robodu/src/components/profile/posts/PostsContainer.jsx"],"names":["connect","addPostActionCreator","newPostTextActionCreator","addLikeActionCreator","Posts","mapStateToProps","state","posts","postState","newPostText","mapDispatchToProps","dispatch","addPost","textChanged","text","addLike","id","PostsContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,wBAA/B,EAAyDC,oBAAzD,QAAqF,4BAArF;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,SAAN,CAAgBC;AAF1B,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,OAAO,EAAE,MAAM;AAAED,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AAAkC,KADhD;AAEHY,IAAAA,WAAW,EAAGC,IAAD,IAAU;AAAEH,MAAAA,QAAQ,CAACT,wBAAwB,CAACY,IAAD,CAAzB,CAAR;AAA0C,KAFhE;AAGHC,IAAAA,OAAO,EAAGC,EAAD,IAAQ;AAAEL,MAAAA,QAAQ,CAACR,oBAAoB,CAACa,EAAD,CAArB,CAAR;AAAoC;AAHpD,GAAP;AAKH,CAND;;AASA,MAAMC,cAAc,GAAGjB,OAAO,CAACK,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CN,KAA7C,CAAvB;AAEA,eAAea,cAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { addPostActionCreator, newPostTextActionCreator, addLikeActionCreator } from \"../../../redux/postReducer\";\r\nimport Posts from './Posts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.postState.posts,\r\n        newPostText: state.postState.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => { dispatch(addPostActionCreator()) },\r\n        textChanged: (text) => { dispatch(newPostTextActionCreator(text)) },\r\n        addLike: (id) => { dispatch(addLikeActionCreator(id)) }\r\n    }\r\n}\r\n\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;"]},"metadata":{},"sourceType":"module"}